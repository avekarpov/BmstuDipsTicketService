version: "3"

services:
    postgres:
        image: postgres:13
        container_name: postgres
        restart: always
        environment:
            POSTGRES_USER: program
            POSTGRES_PASSWORD: program_password
        volumes:
            - postgresql:/var/lib/postgresql
            - ./postgres:/docker-entrypoint-initdb.d
        ports:
            - 5432:5432
        networks:
            - internal

    gateway:
        build:
            dockerfile: Dockerfile.gateway
        container_name: gateway
        restart: always
        environment:
            SERVICE_HOST: gateway
            SERVICE_PORT: 8080

            FLIGHT_SERVICE_HOST: flight_service
            FLIGHT_SERVICE_PORT: 8060

            TICKET_SERVICE_HOST: ticket_serivce
            TICKET_SERVICE_PORT: 8070

            BONUS_SERVICE_HOST: bonus_service
            BONUS_SERVICE_PORT: 8050

            STATS_SERVICE_HOST: stats_service
            STATS_SERVICE_PORT: 8040

            OIDC_HOST: keycloak
            OIDC_PORT: 8030
            OIDC_CLIENT_SECRET: 4FGDQ97yQ4F7UPdIJ5JraRzCjSjVuWUH

            KAFKA_HOST: kafka
            KAFKA_PORT: 29092
        ports:
            - 8080:8080
        networks:
            - internal

    flight:
        build:
            dockerfile: Dockerfile.flight
        container_name: flight_service    
        restart: always
        environment:
            SERVICE_HOST: flight_service
            SERVICE_PORT: 8060

            DB_HOST: postgres

            KAFKA_HOST: kafka
            KAFKA_PORT: 29092
        depends_on:
            - postgres
            - kafka
            - keycloak
        ports:
            - 8060:8060
        networks:
            - internal

    ticket:
        build:
            dockerfile: Dockerfile.ticket
        container_name: ticket_serivce
        restart: always
        environment:
            SERVICE_HOST: ticket_serivce
            SERVICE_PORT: 8070

            FLIGHT_SERVICE_HOST: gateway
            FLIGHT_SERVICE_PORT: 8080

            BONUS_SERVICE_HOST: gateway
            BONUS_SERVICE_PORT: 8080

            DB_HOST: postgres

            OIDC_HOST: keycloak
            OIDC_PORT: 8030
            OIDC_CLIENT_SECRET: 4FGDQ97yQ4F7UPdIJ5JraRzCjSjVuWUH

            KAFKA_HOST: kafka
            KAFKA_PORT: 29092
        depends_on:
            - postgres
            - kafka
            - keycloak
        ports:
            - 8070:8070
        networks:
            - internal

    bonus:
        build:
            dockerfile: Dockerfile.bonus
        container_name: bonus_service
        restart: always
        environment:
            SERVICE_HOST: bonus_service
            SERVICE_PORT: 8050

            DB_HOST: postgres

            OIDC_HOST: keycloak
            OIDC_PORT: 8030
            OIDC_CLIENT_SECRET: 4FGDQ97yQ4F7UPdIJ5JraRzCjSjVuWUH

            KAFKA_HOST: kafka
            KAFKA_PORT: 29092
        depends_on:
            - postgres
            - kafka
            - keycloak
        ports:
            - 8050:8050
        networks:
            - internal

    stats:
        build:
            dockerfile: Dockerfile.stats
        container_name: stats_service    
        restart: always
        environment:
            SERVICE_HOST: stats_service
            SERVICE_PORT: 8040

            DB_HOST: postgres

            KAFKA_HOST: kafka
            KAFKA_PORT: 29092
        depends_on:
            - postgres
            - kafka
        ports:
            - 8040:8040
        networks:
            - internal

    keycloak:
        image: quay.io/keycloak/keycloak
        container_name: keycloak
        restart: always
        environment:
            KEYCLOAK_ADMIN: admin
            KEYCLOAK_ADMIN_PASSWORD: admin

            KC_HOSTNAME: localhost
            KC_HTTP_PORT: 8030
            KC_HTTP_ENABLED: true

            KEYCLOAK_FRONTEND_URL: http://localhost:8030

            KC_DB: postgres
            KC_DB_URL: jdbc:postgresql://postgres:5432/keycloak
            KC_DB_USERNAME: program
            KC_DB_PASSWORD: program_password
        command: start-dev
        depends_on:
            - postgres
        ports:
            - 8030:8030
        networks:
            - internal

    zookeeper:
        image: confluentinc/cp-zookeeper:7.3.2
        container_name: zookeeper
        environment:
            ZOOKEEPER_CLIENT_PORT: 22181
            ZOOKEEPER_TICK_TIME: 2000
        ports:
            - 22181:22181
        networks:
            - internal

    kafka:
        image: confluentinc/cp-kafka:7.3.2
        container_name: kafka
        environment:
            KAFKA_BROKER_ID: 1
            KAFKA_ZOOKEEPER_CONNECT: zookeeper:22181

            KAFKA_LISTENERS: LISTENER_BOB://kafka:29092,LISTENER_FRED://localhost:9092
            KAFKA_ADVERTISED_LISTENERS: LISTENER_BOB://kafka:29092,LISTENER_FRED://localhost:9092
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_BOB:PLAINTEXT,LISTENER_FRED:PLAINTEXT
            KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_BOB

            KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
            KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
        depends_on:
            - zookeeper
        ports:
            - 29092:29092
        networks:
            - internal

volumes:
    postgresql:

networks:
    internal:
